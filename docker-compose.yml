version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: distributed_db
      MYSQL_USER: animesh@localhost
      MYSQL_PASSWORD: animesh
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  node1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node1
    environment:
      - RAFT_NODE_ID=n1
      - SERVER_PORT=8081
      - SPRING_PROFILES_ACTIVE=prod
      - RAFT_PEERS=n2,n3
    ports:
      - "8081:8081"
    depends_on:
      - mysql

  node2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node2
    environment:
      - RAFT_NODE_ID=n2
      - SERVER_PORT=8082
      - SPRING_PROFILES_ACTIVE=prod
      - RAFT_PEERS=n1,n3
    ports:
      - "8082:8082"
    depends_on:
      - mysql

  node3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node3
    environment:
      - RAFT_NODE_ID=n3
      - SERVER_PORT=8083
      - SPRING_PROFILES_ACTIVE=prod
      - RAFT_PEERS=n1,n2
    ports:
      - "8083:8083"
    depends_on:
      - mysql

  simulator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simulator
    command: ["simulate"]
    environment:
      - RAFT_NODE_ID=simulator
      - SERVER_PORT=8084
      - SPRING_PROFILES_ACTIVE=prod
      - RAFT_PEERS=n1,n2,n3
      - NODE_URLS=http://node1:8081/orders,http://node2:8082/orders,http://node3:8083/orders
    ports:
      - "8084:8084"
    depends_on:
      - mysql

volumes:
  mysql-data: